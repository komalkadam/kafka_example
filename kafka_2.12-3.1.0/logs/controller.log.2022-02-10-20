[2022-02-10 20:32:30,285] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@5bcea91b, name=log4j:logger=kafka.controller (kafka.controller)
[2022-02-10 20:37:06,207] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-02-10 20:37:06,331] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2022-02-10 20:37:06,336] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2022-02-10 20:37:06,400] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-02-10 20:37:06,404] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-02-10 20:37:06,407] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-02-10 20:37:06,409] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-02-10 20:37:06,427] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 25) (kafka.controller.KafkaController)
[2022-02-10 20:37:06,433] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-02-10 20:37:06,437] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-02-10 20:37:06,444] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-02-10 20:37:06,444] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-02-10 20:37:06,444] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2022-02-10 20:37:06,445] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2022-02-10 20:37:06,445] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-02-10 20:37:06,447] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-02-10 20:37:06,447] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-02-10 20:37:06,448] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-02-10 20:37:06,448] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2022-02-10 20:37:06,448] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-02-10 20:37:06,459] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-02-10 20:37:06,460] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-02-10 20:37:06,463] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-02-10 20:37:06,463] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2022-02-10 20:37:06,464] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-02-10 20:37:06,466] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-02-10 20:37:06,468] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-02-10 20:37:06,469] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2022-02-10 20:37:06,469] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2022-02-10 20:37:06,474] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-02-10 20:37:06,474] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-02-10 20:37:06,475] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-02-10 20:37:06,475] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-02-10 20:37:06,476] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-02-10 20:37:06,535] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-02-10 20:37:11,537] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-10 20:37:11,537] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-10 20:38:02,920] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2022-02-10 20:38:02,921] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2022-02-10 20:38:02,921] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2022-02-10 20:38:02,925] TRACE [Controller id=0] All leaders =  (kafka.controller.KafkaController)
[2022-02-10 20:38:03,918] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-02-10 20:38:03,919] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-02-10 20:38:03,918] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-02-10 20:38:03,919] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2022-02-10 20:38:03,919] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-02-10 20:38:03,920] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-02-10 20:38:03,921] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-02-10 20:38:03,921] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-02-10 20:38:03,922] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-02-10 20:38:03,922] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-02-10 20:38:03,923] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2022-02-10 20:38:13,444] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-02-10 20:38:13,499] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2022-02-10 20:38:13,501] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-02-10 20:38:13,505] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-02-10 20:38:13,509] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-02-10 20:38:13,511] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-02-10 20:38:13,528] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 46) (kafka.controller.KafkaController)
[2022-02-10 20:38:13,535] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-02-10 20:38:13,542] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-02-10 20:38:13,557] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-02-10 20:38:13,558] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-02-10 20:38:13,559] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2022-02-10 20:38:13,559] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2022-02-10 20:38:13,559] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-02-10 20:38:13,563] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-02-10 20:38:13,563] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-02-10 20:38:13,563] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-02-10 20:38:13,564] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2022-02-10 20:38:13,564] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-02-10 20:38:13,576] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-02-10 20:38:13,577] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-02-10 20:38:13,581] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-02-10 20:38:13,581] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2022-02-10 20:38:13,581] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-02-10 20:38:13,582] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-02-10 20:38:13,585] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-02-10 20:38:13,585] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2022-02-10 20:38:13,586] INFO [Controller id=0] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2022-02-10 20:38:13,592] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-02-10 20:38:13,592] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-02-10 20:38:13,592] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-02-10 20:38:13,593] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-02-10 20:38:13,594] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-02-10 20:38:13,628] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-02-10 20:38:18,633] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-10 20:38:18,634] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-10 20:38:41,449] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2022-02-10 20:38:41,449] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2022-02-10 20:38:41,450] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2022-02-10 20:38:41,452] TRACE [Controller id=0] All leaders =  (kafka.controller.KafkaController)
[2022-02-10 20:38:42,266] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-02-10 20:38:42,266] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-02-10 20:38:42,266] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-02-10 20:38:42,267] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2022-02-10 20:38:42,267] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-02-10 20:38:42,268] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-02-10 20:38:42,268] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-02-10 20:38:42,269] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2022-02-10 20:38:42,269] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2022-02-10 20:38:42,269] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2022-02-10 20:38:42,271] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2022-02-10 20:38:51,850] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@5bcea91b, name=log4j:logger=kafka.controller (kafka.controller)
[2022-02-10 20:39:01,291] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-02-10 20:39:01,340] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 3 and epoch zk version is now 3 (kafka.controller.KafkaController)
[2022-02-10 20:39:01,342] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-02-10 20:39:01,347] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-02-10 20:39:01,350] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-02-10 20:39:01,352] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-02-10 20:39:01,369] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 65) (kafka.controller.KafkaController)
[2022-02-10 20:39:01,376] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-02-10 20:39:01,383] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-02-10 20:39:01,398] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-02-10 20:39:01,400] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-02-10 20:39:01,400] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2022-02-10 20:39:01,401] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2022-02-10 20:39:01,401] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-02-10 20:39:01,403] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-02-10 20:39:01,404] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-02-10 20:39:01,404] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-02-10 20:39:01,405] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2022-02-10 20:39:01,406] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-02-10 20:39:01,419] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-02-10 20:39:01,420] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-02-10 20:39:01,423] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-02-10 20:39:01,424] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2022-02-10 20:39:01,424] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-02-10 20:39:01,425] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-02-10 20:39:01,426] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-02-10 20:39:01,429] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2022-02-10 20:39:01,429] INFO [Controller id=0] Ready to serve as the new controller with epoch 3 (kafka.controller.KafkaController)
[2022-02-10 20:39:01,435] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-02-10 20:39:01,435] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-02-10 20:39:01,435] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-02-10 20:39:01,436] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-02-10 20:39:01,438] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-02-10 20:39:01,476] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-02-10 20:39:06,478] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-10 20:39:06,478] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-10 20:44:06,486] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-10 20:44:06,487] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-10 20:44:13,510] INFO [Controller id=0] New topics: [Set(test-topic)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(test-topic,Some(bLVJCmcPSF6C7XK3R3iohA),Map(test-topic-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), test-topic-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), test-topic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), test-topic-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-02-10 20:44:13,511] INFO [Controller id=0] New partition creation callback for test-topic-2,test-topic-1,test-topic-0,test-topic-3 (kafka.controller.KafkaController)
[2022-02-10 20:48:48,512] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(lGDu1T9qQ1uOdUk6sjsTlA),Map(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-02-10 20:48:48,512] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-37,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-38,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-13,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2022-02-10 20:49:06,497] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-10 20:49:06,498] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-10 20:49:06,502] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-02-10 20:49:06,502] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-02-10 20:54:06,511] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-10 20:54:06,511] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-10 20:54:06,512] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-02-10 20:54:06,512] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-02-10 20:59:06,522] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-10 20:59:06,523] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-10 20:59:06,524] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-02-10 20:59:06,524] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
