[2022-02-13 14:54:09,692] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2022-02-13 14:54:09,729] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(1, 0) (kafka.controller.KafkaController)
[2022-02-13 14:54:09,766] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-02-13 14:54:09,814] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-02-13 14:54:09,879] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2022-02-13 14:54:09,892] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2022-02-13 14:54:09,892] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2022-02-13 14:54:09,918] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2022-02-13 14:54:09,919] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2022-02-13 14:54:09,919] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2022-02-13 14:54:09,924] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2022-02-13 14:54:10,293] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 14 and epoch zk version is now 14 (kafka.controller.KafkaController)
[2022-02-13 14:54:10,294] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2022-02-13 14:54:10,326] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-02-13 14:54:10,339] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-02-13 14:54:10,347] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2022-02-13 14:54:10,363] INFO [Controller id=1] Initialized broker epochs cache: Map(1 -> 445, 0 -> 446) (kafka.controller.KafkaController)
[2022-02-13 14:54:10,377] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1, 0) (kafka.controller.KafkaController)
[2022-02-13 14:54:10,418] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-02-13 14:54:10,430] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-02-13 14:54:10,448] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-02-13 14:54:10,449] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-02-13 14:54:10,448] INFO [Controller id=1] Currently active brokers in the cluster: Set(1, 0) (kafka.controller.KafkaController)
[2022-02-13 14:54:10,449] INFO [Controller id=1] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2022-02-13 14:54:10,449] INFO [Controller id=1] Current list of topics in the cluster: Set(test-topic-replicated, __consumer_offsets, test-topic) (kafka.controller.KafkaController)
[2022-02-13 14:54:10,449] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-02-13 14:54:10,451] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-02-13 14:54:10,451] INFO [Controller id=1] List of topics ineligible for deletion: test-topic-replicated (kafka.controller.KafkaController)
[2022-02-13 14:54:10,451] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-02-13 14:54:10,451] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(test-topic-replicated) (kafka.controller.TopicDeletionManager)
[2022-02-13 14:54:10,451] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2022-02-13 14:54:10,452] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-02-13 14:54:10,453] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-02-13 14:54:10,453] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-02-13 14:54:10,453] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-02-13 14:54:10,467] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-02-13 14:54:10,479] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> Map([Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OnlineReplica, [Topic=test-topic-replicated,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OnlineReplica, [Topic=test-topic-replicated,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=test-topic-replicated,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=0] -> OnlineReplica, [Topic=test-topic-replicated,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=test-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=test-topic-replicated,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> OnlineReplica, [Topic=test-topic-replicated,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OnlineReplica, [Topic=test-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=test-topic-replicated,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> OnlineReplica, [Topic=test-topic,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> OnlineReplica, [Topic=test-topic-replicated,Partition=1,Replica=2] -> OfflineReplica, [Topic=test-topic-replicated,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=0] -> OnlineReplica, [Topic=test-topic,Partition=3,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-02-13 14:54:10,480] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-02-13 14:54:10,481] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-02-13 14:54:10,482] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> Map(__consumer_offsets-49 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, test-topic-1 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition, __consumer_offsets-13 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, test-topic-replicated-0 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, test-topic-3 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, test-topic-0 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, test-topic-2 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, test-topic-replicated-2 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition, test-topic-replicated-1 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-02-13 14:54:10,482] INFO [Controller id=1] Ready to serve as the new controller with epoch 14 (kafka.controller.KafkaController)
[2022-02-13 14:54:10,484] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-02-13 14:54:10,484] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-02-13 14:54:10,484] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-02-13 14:54:10,484] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-02-13 14:54:10,484] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-02-13 14:54:10,546] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-02-13 14:54:15,555] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-02-13 14:54:15,555] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-02-13 14:54:15,558] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 Map(test-topic-replicated-2 -> Vector(0, 2, 1)) (kafka.controller.KafkaController)
[2022-02-13 14:54:15,558] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.01818181818181818 (kafka.controller.KafkaController)
[2022-02-13 14:54:15,558] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-02-13 14:54:15,558] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-02-13 14:54:15,558] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map(test-topic-replicated-0 -> Vector(2, 1, 0)) (kafka.controller.KafkaController)
[2022-02-13 14:54:15,559] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2022-02-13 14:54:15,559] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
